// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packet.proto

package packet

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PackPacket struct {
	Timestamp            string   `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TimestampInt         uint64   `protobuf:"varint,2,opt,name=timestamp_int,json=timestampInt,proto3" json:"timestamp_int,omitempty"`
	SrcIp                string   `protobuf:"bytes,3,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	DestIp               string   `protobuf:"bytes,4,opt,name=dest_ip,json=destIp,proto3" json:"dest_ip,omitempty"`
	SrcPort              uint32   `protobuf:"varint,5,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DestPort             uint32   `protobuf:"varint,6,opt,name=dest_port,json=destPort,proto3" json:"dest_port,omitempty"`
	Seq                  uint32   `protobuf:"varint,7,opt,name=seq,proto3" json:"seq,omitempty"`
	AckSeq               uint32   `protobuf:"varint,8,opt,name=ack_seq,json=ackSeq,proto3" json:"ack_seq,omitempty"`
	PayloadSize          uint32   `protobuf:"varint,9,opt,name=payload_size,json=payloadSize,proto3" json:"payload_size,omitempty"`
	IsQuery              bool     `protobuf:"varint,10,opt,name=is_query,json=isQuery,proto3" json:"is_query,omitempty"`
	Payload              []byte   `protobuf:"bytes,11,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackPacket) Reset()         { *m = PackPacket{} }
func (m *PackPacket) String() string { return proto.CompactTextString(m) }
func (*PackPacket) ProtoMessage()    {}
func (*PackPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_packet_c3144ff740a83c4d, []int{0}
}
func (m *PackPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackPacket.Unmarshal(m, b)
}
func (m *PackPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackPacket.Marshal(b, m, deterministic)
}
func (dst *PackPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackPacket.Merge(dst, src)
}
func (m *PackPacket) XXX_Size() int {
	return xxx_messageInfo_PackPacket.Size(m)
}
func (m *PackPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_PackPacket.DiscardUnknown(m)
}

var xxx_messageInfo_PackPacket proto.InternalMessageInfo

func (m *PackPacket) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *PackPacket) GetTimestampInt() uint64 {
	if m != nil {
		return m.TimestampInt
	}
	return 0
}

func (m *PackPacket) GetSrcIp() string {
	if m != nil {
		return m.SrcIp
	}
	return ""
}

func (m *PackPacket) GetDestIp() string {
	if m != nil {
		return m.DestIp
	}
	return ""
}

func (m *PackPacket) GetSrcPort() uint32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

func (m *PackPacket) GetDestPort() uint32 {
	if m != nil {
		return m.DestPort
	}
	return 0
}

func (m *PackPacket) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *PackPacket) GetAckSeq() uint32 {
	if m != nil {
		return m.AckSeq
	}
	return 0
}

func (m *PackPacket) GetPayloadSize() uint32 {
	if m != nil {
		return m.PayloadSize
	}
	return 0
}

func (m *PackPacket) GetIsQuery() bool {
	if m != nil {
		return m.IsQuery
	}
	return false
}

func (m *PackPacket) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*PackPacket)(nil), "packet.PackPacket")
}

func init() { proto.RegisterFile("packet.proto", fileDescriptor_packet_c3144ff740a83c4d) }

var fileDescriptor_packet_c3144ff740a83c4d = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xcf, 0x4e, 0x03, 0x21,
	0x10, 0xc6, 0x43, 0xff, 0xb0, 0xbb, 0xd3, 0x6d, 0x62, 0x48, 0x8c, 0x18, 0x3d, 0xac, 0x7a, 0xd9,
	0x93, 0x17, 0x9f, 0x62, 0x6f, 0x2b, 0x7d, 0x00, 0x82, 0x94, 0x03, 0x59, 0x5b, 0x58, 0xc0, 0x43,
	0xfb, 0x68, 0x3e, 0x9d, 0x99, 0xb1, 0xd6, 0x1b, 0xbf, 0xdf, 0x37, 0x5f, 0x80, 0x81, 0x36, 0x1a,
	0x3b, 0xb9, 0xf2, 0x1a, 0x53, 0x28, 0x41, 0xf0, 0x5f, 0x7a, 0xfe, 0x5e, 0x00, 0x8c, 0xc6, 0x4e,
	0x23, 0xa1, 0x78, 0x84, 0xa6, 0xf8, 0x83, 0xcb, 0xc5, 0x1c, 0xa2, 0x64, 0x1d, 0xeb, 0x1b, 0xf5,
	0x2f, 0xc4, 0x0b, 0x6c, 0xaf, 0xa0, 0xfd, 0xb1, 0xc8, 0x45, 0xc7, 0xfa, 0x95, 0x6a, 0xaf, 0x72,
	0x38, 0x16, 0x71, 0x0b, 0x3c, 0x27, 0xab, 0x7d, 0x94, 0x4b, 0xea, 0xaf, 0x73, 0xb2, 0x43, 0x14,
	0x77, 0x50, 0xed, 0x5d, 0x2e, 0xe8, 0x57, 0xe4, 0x39, 0xe2, 0x10, 0xc5, 0x3d, 0xd4, 0x38, 0x1f,
	0x43, 0x2a, 0x72, 0xdd, 0xb1, 0x7e, 0xab, 0xaa, 0x9c, 0xec, 0x18, 0x52, 0x11, 0x0f, 0xd0, 0x50,
	0x87, 0x32, 0x4e, 0x59, 0x8d, 0x82, 0xc2, 0x1b, 0x58, 0x66, 0x37, 0xcb, 0x8a, 0x34, 0x1e, 0xf1,
	0x0a, 0x63, 0x27, 0x8d, 0xb6, 0x26, 0xcb, 0x8d, 0x9d, 0x76, 0x6e, 0x16, 0x4f, 0xf8, 0xf9, 0xd3,
	0x67, 0x30, 0x7b, 0x9d, 0xfd, 0xd9, 0xc9, 0x86, 0xd2, 0xcd, 0xc5, 0xed, 0xfc, 0xd9, 0xe1, 0x2b,
	0x7c, 0xd6, 0xf3, 0x97, 0x4b, 0x27, 0x09, 0x1d, 0xeb, 0x6b, 0x55, 0xf9, 0xfc, 0x8e, 0x28, 0x24,
	0x54, 0x97, 0x49, 0xb9, 0xe9, 0x58, 0xdf, 0xaa, 0x3f, 0xfc, 0xe0, 0xb4, 0xcb, 0xb7, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd7, 0xa0, 0xc2, 0x7f, 0x5b, 0x01, 0x00, 0x00,
}
